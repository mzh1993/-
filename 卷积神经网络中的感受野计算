转自：祁昆仑
本文翻译自A guide to receptive field arithmetic for Convolutional Neural Networks（可能需要翻墙才能访问），方便自己学习和参考。若有侵权，还请告知。
import math
convnet =   [[11,4,0],[3,2,0],[5,1,2],[3,2,0],[3,1,1],[3,1,1],[3,1,1],[3,2,0],[6,1,0], [1,1,0]]
layer_names = ['conv1','pool1','conv2','pool2','conv3','conv4','conv5','pool5','fc6-conv', 'fc7-conv']
imsize = 227

def Netinfo(Layer_info, currect_layer):
    n_in = Layer_info[0]
    j_in = Layer_info[1]
    rf_in = Layer_info[2]
    start_in = Layer_info[3]

    k = currect_layer[0]
    s = currect_layer[1]
    p = currect_layer[2]
    
    n_out = (n_in + 2*p - k)/s + 1
    j_out = j_in*s
    rf_out = rf_in + (k -1)*j_in
    start_out = start_in + ((k -1)/2 + p)*j_in ##计算有问题？？
    currect_layer_info = [n_out,j_out,rf_out,start_out]
    return currect_layer_info

def printnet(netinfo,layer_name):
    print(layer_name + ':')
    print("Feature_map=" + str(netinfo[0]) + ", Jamp=" + str(netinfo[1]) \
          + ", RF=" + str(netinfo[2]) + ", Start=" + str(netinfo[3]))

    
netinfo = []
Layer_info = [imsize, 1, 1, 0.5] # 初始化网络[N,J,RF,Start]
netinfo.append(Layer_info)
print("-------Summary Cnovinfo-------")
printnet(netinfo[0],"Input_image")
for i in range(len(convnet)):
    Layer_info = Netinfo(Layer_info,convnet[i])
    netinfo.append(Layer_info) #[K,S,P]
    printnet(netinfo[i+1],layer_names[i])
    print("----------------------")

#测试Github Demo